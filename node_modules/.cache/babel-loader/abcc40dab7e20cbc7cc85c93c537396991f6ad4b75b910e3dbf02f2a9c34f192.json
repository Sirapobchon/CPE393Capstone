{"ast":null,"code":"var _jsxFileName = \"/Users/eotteoke/Desktop/Test/ttt/src/Components/TicTacToe/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './TicTacToe.css';\nimport dog_icon from '../Assets/dog.png';\nimport cat_icon from '../Assets/cat.jpg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet data = [[\"\", 1], [\"\", 1], [\"\", 1], [\"\", 1], [\"\", 1], [\"\", 1], [\"\", 1], [\"\", 1], [\"\", 1]]; // Each element now has a size property\n\nconst TicTacToe = () => {\n  _s();\n  const [selectedSize, setSelectedSize] = useState('S'); // Current selected size\n  const [count, setCount] = useState(0);\n  const [lock, setLock] = useState(false);\n  const [remainingSPieces, setRemainingSPieces] = useState(3);\n  const [remainingMPieces, setRemainingMPieces] = useState(2);\n  const [remainingLPieces, setRemainingLPieces] = useState(2);\n  const toggle = (e, num) => {\n    if (lock || data[num][0] !== \"\") {\n      const existingSize = data[num][1];\n      const newSize = getSelectedSizeValue();\n      if (newSize > existingSize) {\n        // Overtake smaller piece\n        data[num][0] = count % 2 === 0 ? 'Dog' : 'Cat';\n        data[num][1] = newSize;\n        e.target.innerHTML = `<img src='${data[num][0] === 'Dog' ? dog_icon : cat_icon}' style=\"width: ${newSize * 50}px\">`; // Adjust image size based on size\n        setCount(count + 1);\n        const winner = calculateWinner();\n        if (winner) {\n          alert(`${winner} wins!`);\n          setLock(true);\n        }\n      }\n      return;\n    }\n\n    // Place new piece (no overtaking)\n    if (selectedSize === 'S' && remainingSPieces > 0 || selectedSize === 'M' && remainingMPieces > 0 || selectedSize === 'L' && remainingLPieces > 0) {\n      // **1. Place the piece on the board:**\n      data[num][0] = count % 2 === 0 ? 'Dog' : 'Cat'; // Set player\n      data[num][1] = getSelectedSizeValue(); // Set size\n      e.target.innerHTML = `<img src='${data[num][0] === 'Dog' ? dog_icon : cat_icon}' style=\"width: ${data[num][1] * 50}px\">`; // Update board display\n\n      // **2. Update game state:**\n      setCount(count + 1); // Increment turn count\n\n      // **3. Decrement the count of remaining pieces for the chosen size:**\n      if (selectedSize === 'S') {\n        setRemainingSPieces(remainingSPieces - 1);\n      } else if (selectedSize === 'M') {\n        setRemainingMPieces(remainingMPieces - 1);\n      } else {\n        setRemainingLPieces(remainingLPieces - 1);\n      }\n\n      // **4. Check for a winner:**\n      const winner = calculateWinner();\n      if (winner) {\n        alert(`${winner} wins!`);\n        setLock(true);\n      }\n    } else {\n      // **5. Alert if no pieces of the selected size are available:**\n      alert(`No more ${selectedSize} pieces available!`);\n    }\n    const calculateWinner = () => {\n      const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        const [playerA, sizeA] = data[a];\n        const [playerB, sizeB] = data[b];\n        const [playerC, sizeC] = data[c];\n        if (playerA && playerA === playerB && playerA === playerC && (sizeA === sizeB && sizeB === sizeC || sizeA >= sizeB && sizeA >= sizeC || sizeB >= sizeA && sizeB >= sizeC || sizeC >= sizeA && sizeC >= sizeB)) {\n          return playerA;\n        }\n      }\n      return null;\n    };\n    const getSelectedSizeValue = () => {\n      if (selectedSize === 'S') {\n        return 1;\n      } else if (selectedSize === 'M') {\n        return 2;\n      } else {\n        return 3;\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"title\",\n        children: [\"PawClaw \", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"XO\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 39\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 0);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 1);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 2);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 3);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 4);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 5);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row3\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 6);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 7);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"boxes\",\n            onClick: e => {\n              toggle(e, 8);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Size\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"PieceSizeS\",\n          onClick: () => setSelectedSize('S'),\n          children: \"S\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"PieceSizeM\",\n          onClick: () => setSelectedSize('M'),\n          children: \"M\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"PieceSizeL\",\n          onClick: () => setSelectedSize('L'),\n          children: \"L\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset\",\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  };\n};\n_s(TicTacToe, \"AKRZLIW8nD7+qzTYmUyMIrz4we8=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","dog_icon","cat_icon","jsxDEV","_jsxDEV","data","TicTacToe","_s","selectedSize","setSelectedSize","count","setCount","lock","setLock","remainingSPieces","setRemainingSPieces","remainingMPieces","setRemainingMPieces","remainingLPieces","setRemainingLPieces","toggle","e","num","existingSize","newSize","getSelectedSizeValue","target","innerHTML","winner","calculateWinner","alert","lines","i","length","a","b","c","playerA","sizeA","playerB","sizeB","playerC","sizeC","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/eotteoke/Desktop/Test/ttt/src/Components/TicTacToe/TicTacToe.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport './TicTacToe.css'\nimport dog_icon from '../Assets/dog.png'\nimport cat_icon from '../Assets/cat.jpg'\n\nlet data = [\n  [\"\", 1],\n  [\"\", 1],\n  [\"\", 1],\n  [\"\", 1],\n  [\"\", 1],\n  [\"\", 1],\n  [\"\", 1],\n  [\"\", 1],\n  [\"\", 1],\n]; // Each element now has a size property\n\nconst TicTacToe = () => {\n  const [selectedSize, setSelectedSize] = useState('S'); // Current selected size\n  const [count, setCount] = useState(0);\n  const [lock, setLock] = useState(false);\n  const [remainingSPieces, setRemainingSPieces] = useState(3);\n  const [remainingMPieces, setRemainingMPieces] = useState(2);\n  const [remainingLPieces, setRemainingLPieces] = useState(2);\n\n  const toggle = (e, num) => {\n    if (lock || data[num][0] !== \"\") {\n      const existingSize = data[num][1];\n      const newSize = getSelectedSizeValue();\n\n      if (newSize > existingSize) {\n        // Overtake smaller piece\n        data[num][0] = count % 2 === 0 ? 'Dog' : 'Cat';\n        data[num][1] = newSize;\n        e.target.innerHTML = `<img src='${data[num][0] === 'Dog' ? dog_icon : cat_icon}' style=\"width: ${newSize * 50}px\">`; // Adjust image size based on size\n        setCount(count + 1);\n        const winner = calculateWinner();\n        if (winner) {\n          alert(`${winner} wins!`);\n          setLock(true);\n        }\n      }\n      return;\n    }\n\n    // Place new piece (no overtaking)\n    if (\n      (selectedSize === 'S' && remainingSPieces > 0) ||\n      (selectedSize === 'M' && remainingMPieces > 0) ||\n      (selectedSize === 'L' && remainingLPieces > 0)\n    ) {\n      // **1. Place the piece on the board:**\n      data[num][0] = count % 2 === 0 ? 'Dog' : 'Cat'; // Set player\n      data[num][1] = getSelectedSizeValue(); // Set size\n      e.target.innerHTML = `<img src='${data[num][0] === 'Dog' ? dog_icon : cat_icon}' style=\"width: ${data[num][1] * 50}px\">`; // Update board display\n\n      // **2. Update game state:**\n      setCount(count + 1); // Increment turn count\n\n      // **3. Decrement the count of remaining pieces for the chosen size:**\n      if (selectedSize === 'S') {\n        setRemainingSPieces(remainingSPieces - 1);\n      } else if (selectedSize === 'M') {\n        setRemainingMPieces(remainingMPieces - 1);\n      } else {\n        setRemainingLPieces(remainingLPieces - 1);\n      }\n\n      // **4. Check for a winner:**\n      const winner = calculateWinner();\n      if (winner) {\n        alert(`${winner} wins!`);\n        setLock(true);\n      }\n    } else {\n      // **5. Alert if no pieces of the selected size are available:**\n      alert(`No more ${selectedSize} pieces available!`);\n    }\n\n    const calculateWinner = () => {\n      const lines = [\n        [0, 1, 2],\n        [3, 4, 5],\n        [6, 7, 8],\n        [0, 3, 6],\n        [1, 4, 7],\n        [2, 5, 8],\n        [0, 4, 8],\n        [2, 4, 6],\n      ];\n\n      for (let i = 0; i < lines.length; i++) {\n        const [a, b, c] = lines[i];\n        const [playerA, sizeA] = data[a];\n        const [playerB, sizeB] = data[b];\n        const [playerC, sizeC] = data[c];\n\n        if (playerA && playerA === playerB && playerA === playerC &&\n          (sizeA === sizeB && sizeB === sizeC ||\n            (sizeA >= sizeB && sizeA >= sizeC) ||\n            (sizeB >= sizeA && sizeB >= sizeC) ||\n            (sizeC >= sizeA && sizeC >= sizeB))) {\n          return playerA;\n        }\n      }\n\n      return null;\n    };\n\n    const getSelectedSizeValue = () => {\n      if (selectedSize === 'S') {\n        return 1;\n      } else if (selectedSize === 'M') {\n        return 2;\n      } else {\n        return 3;\n      }\n    };\n\n    return (\n      <div className='container'>\n        <h1 className=\"title\">PawClaw <span>XO</span></h1>\n        <div className='board'>\n          <div className=\"row1\">\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 0) }}></div>\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 1) }}></div>\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 2) }}></div>\n          </div>\n          <div className=\"row2\">\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 3) }}></div>\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 4) }}></div>\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 5) }}></div>\n          </div>\n          <div className=\"row3\">\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 6) }}></div>\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 7) }}></div>\n            <div className=\"boxes\" onClick={(e) => { toggle(e, 8) }}></div>\n          </div>\n\n        </div>\n        <div className=\"Size\">\n          <button className=\"PieceSizeS\" onClick={() => setSelectedSize('S')}>S</button>\n          <button className=\"PieceSizeM\" onClick={() => setSelectedSize('M')}>M</button>\n          <button className=\"PieceSizeL\" onClick={() => setSelectedSize('L')}>L</button>\n        </div>\n\n\n        <button className='reset'>Reset</button>\n      </div>\n    );\n  }\n}\n  export default TicTacToe"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}